{"name":"GestPayWS","tagline":"PHP implementation of GestPay (Banca Sella) Web Service","body":"# GestPayWS\r\n\r\n[![Latest Stable Version](https://poser.pugx.org/endelwar/gestpayws/v/stable.svg)](https://packagist.org/packages/endelwar/gestpayws)\r\n[![Build Status](https://travis-ci.org/endelwar/GestPayWS.svg?branch=master)](https://travis-ci.org/endelwar/GestPayWS)\r\n[![Scrutinizer Code Quality](https://scrutinizer-ci.com/g/endelwar/GestPayWS/badges/quality-score.png?b=master)](https://scrutinizer-ci.com/g/endelwar/GestPayWS/?branch=master)\r\n[![Code Coverage](https://scrutinizer-ci.com/g/endelwar/GestPayWS/badges/coverage.png?b=master)](https://scrutinizer-ci.com/g/endelwar/GestPayWS/?branch=master)\r\n[![License](https://img.shields.io/packagist/l/endelwar/gestpayws.svg)](https://packagist.org/packages/endelwar/gestpayws)\r\n\r\nPHP implementation of GestPay (Banca Sella) Web Services\r\n\r\n## Highlights\r\n\r\n- Simple API\r\n- Decoupled classes\r\n- PHPUnit tested\r\n- Framework agnostic\r\n- Composer ready, [PSR-2][] and [PSR-4][] compliant\r\n\r\n## System Requirements\r\n\r\nYou need **PHP >= 5.3.3** and the `soap` extension to use the library, but the latest stable version of PHP is recommended.\r\n\r\n## Install\r\n\r\nInstall `EndelWar/GestPayWS` using Composer.\r\n\r\n```\r\n$ composer require endelwar/gestpayws\r\n```\r\n\r\n## Using\r\n### Crypt\r\n``` php\r\nrequire __DIR__ . '/../vendor/autoload.php';\r\n\r\nuse EndelWar\\GestPayWS\\WSCryptDecryptSoapClient;\r\nuse EndelWar\\GestPayWS\\WSCryptDecrypt;\r\nuse EndelWar\\GestPayWS\\Parameter\\EncryptParameter;\r\nuse EndelWar\\GestPayWS\\Data;\r\n\r\n// enable or disable test environment\r\n$enableTestEnv = true;\r\n$soapClient = new WSCryptDecryptSoapClient($enableTestEnv);\r\ntry {\r\n    $gestpay = new WSCryptDecrypt($soapClient->getSoapClient());\r\n} catch (\\Exception $e) {\r\n    var_dump($e->getCode(), $e->getMessage());\r\n}\r\n\r\n// set mandatory info\r\n$encryptParameter = new EncryptParameter();\r\n$encryptParameter->shopLogin = 'GESPAY12345';\r\n$encryptParameter->amount = '1.23';\r\n$encryptParameter->shopTransactionId = '1';\r\n$encryptParameter->uicCode = Data\\Currency::EUR;\r\n$encryptParameter->languageId = Data\\Language::ITALIAN;\r\n\r\n// set optional custom info as array\r\n$customArray = array('STORE_ID' => '42', 'STORE_NAME' => 'Shop Abc123');\r\n$encryptParameter->setCustomInfo($customArray);\r\n\r\n// encrypt data\r\n$encryptResult = $gestpay->encrypt($encryptParameter);\r\n\r\n// get redirect link to Banca Sella\r\necho $encryptResult->getPaymentPageUrl($encryptParameter->shopLogin, $soapClient->wsdlEnvironment);\r\n```\r\n\r\n### Decrypt\r\n``` php\r\nrequire __DIR__ . '/../vendor/autoload.php';\r\n\r\nuse EndelWar\\GestPayWS\\Parameter\\DecryptParameter;\r\nuse EndelWar\\GestPayWS\\WSCryptDecryptSoapClient;\r\nuse EndelWar\\GestPayWS\\WSCryptDecrypt;\r\n\r\n// $_GET['a'] and $_GET['b'] are received from Banca Sella\r\n$param = array(\r\n    'shopLogin' => $_GET['a'],\r\n    'CryptedString' => $_GET['b']\r\n);\r\n\r\n$decryptParam = new DecryptParameter($param);\r\n\r\n// enable or disable test environment\r\n$enableTestEnv = true;\r\n$soapClient = new WSCryptDecryptSoapClient($enableTestEnv);\r\ntry {\r\n    $gestpay = new WSCryptDecrypt($soapClient->getSoapClient());\r\n    $decryptResult = $gestpay->decrypt($decryptParam);\r\n    \r\n    echo $decryptResult->TransactionResult;\r\n} catch (\\Exception $e) {\r\n    var_dump($e->getCode(), $e->getMessage());\r\n}\r\n```\r\n\r\n## Testing\r\n\r\n`EndelWar/GestPayWS` has a [PHPUnit](https://phpunit.de) test suite. To run the tests, run the following command from the project folder.\r\n\r\n``` bash\r\n$ phpunit\r\n```\r\n\r\n## Contributing\r\n\r\n1. Fork it\r\n2. Create your feature branch (`git checkout -b my-new-feature`)\r\n3. Commit your changes (`git commit -am 'Add some feature'`)\r\n4. Push to the branch (`git push origin my-new-feature`)\r\n5. Create new Pull Request\r\n\r\n## Versioning\r\n\r\nSemantic versioning ([semver](http://semver.org/)) is applied.\r\n\r\n## License\r\n\r\nThis bundle is under the MIT license. For the full copyright and license information, please view the LICENSE file that\r\nwas distributed with this source code.\r\n\r\n[PSR-2]: https://github.com/php-fig/fig-standards/blob/master/accepted/PSR-2-coding-style-guide.md\r\n[PSR-4]: https://github.com/php-fig/fig-standards/blob/master/accepted/PSR-4-autoloader.md","google":"UA-51156205-4","note":"Don't delete this file! It's used internally to help with page regeneration."}